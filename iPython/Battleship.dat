f = open('Battleship')

#Battleship by Devin Vaage
#
#This program has a 2 block long ship for you to guess
#There is 10 turns. A red block means a hit. A black block means a miss.

import numpy as np
    from random import randint
    from ipythonblocks import BlockGrid

#Set a block grid to 10x10 dimensions with the light blue color
    grid = BlockGrid(10, 10, fill = (173, 216, 230))

#Function for finding a random row value 
    def random_row(grid):
        return randint(1, 8)

#Function for finding a random column value
    def random_col(grid):
        return randint(1, 8)

#Finding the Initial front coordinate of the ship
    ship_row = random_row(grid)
    ship_col = random_col(grid)

#Assigning a random direction for the second block of the ship. "1" is up, "2" is right, "3" is down, "4" is left
    direction = randint(1, 4)

#Assigning the second block of the ship "ship_row2 and ship_col2" based on the direction
    if(direction == 1):
        ship_row2 = ship_row - 1
        ship_col2 = ship_col
    elif(direction == 2):
        ship_row2 = ship_row
        ship_col2 = ship_col + 1
    elif(direction == 3):
        ship_row2 = ship_row + 1
        ship_col2 = ship_col
    else:
        ship_row2 = ship_row
        ship_col2 = ship_col - 1

    print "Let's play Battleship!"
    print "ship_row: " + str(ship_row)
    print "ship_col: " + str(ship_col)
    print "ship_row2: " + str(ship_row2)
    print "ship_col2: " + str(ship_col2)

#Counter to keep track of number of hits
    hits = 0

#Main game loop that loops X times for the number of turns
    for turn in range(20):
        grid.show()
        print "Turn: " + str((turn + 1))
    
    #Getting the user input for their guess of row and column
        guess_row = int(raw_input("Guess Row: "))   
        guess_col = int(raw_input("Guess Col: "))
    
    #This is when there is a hit
        if (guess_row == ship_row and guess_col == ship_col) or (guess_row == ship_row2 and guess_col == ship_col2):
        
        #If the user already guessed the spot that was hit the program lets them know
            if(grid[guess_row, guess_col].red == 255):
                  print "You guessed that one already."
                  continue
                
        #If the user hasn't hit the guessed block the color is changed to red to indicate a hit        
            grid[guess_row, guess_col] = (255, 0, 0)
            hits = hits + 1
        
        #Since the ships are 2 blocks long when there is 2 hits the ship is sunk otherwise the user gets more turns
            if hits == 2:
                print "Congratulations! You sunk my battleship!"
                grid.show()
                break
            elif(hits == 1):
                print "You hit me!"
     
    #This is when there is not a hit        
        else:
        
        #The guesss is outside of the playing board
            if(guess_row < 0 or guess_row > 9) or (guess_col < 0 or guess_col > 9):
                print "Oops, that's not even in the ocean." 
        
        #The guess is already been checked
            elif(grid[guess_row, guess_col].red == 0 or grid[guess_row, guess_col].red == 255):
                print "You guessed that one already."
        
        #The guess is a clean miss 
            else:
                grid[guess_row, guess_col] = (0, 0, 0)
                print "You missed my battleship."
        
        #Game over when the turn limit is exceeded
            if(turn == 19):
                print "Game Over"
                grid[ship_row, ship_col] = (255, 0, 0)
                grid[ship_row2, ship_col2] = (255, 0, 0)
                grid.show()
f.close()